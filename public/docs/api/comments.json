{
    "basePath": "/api/v4/",
    "swaggerVersion": "1.2",
    "apiVersion": "v4",
    "resourcePath": "/comments",
    "apis": [
        {
            "path": "comments/",
            "operations": [
                {
                    "method": "GET",
                    "summary": "Get List of Comments",
                    "nickname": "getComments",
                    "parameters": [
                        {
                            "paramType": "query",
                            "name": "after",
                            "type": "integer",
                            "required": false,
                            "description": "A comment ID to seek to. Comments up to and including the specified\n     *                          ID are excluded from the results and do not count towards `max`.\n     *                          Useful for pagination. Commonly set to the `lastSeen` property from\n     *                          a previous query."
                        },
                        {
                            "paramType": "query",
                            "name": "max",
                            "type": "integer",
                            "required": false,
                            "description": "Maximum number of comments to return. This does not guarantee that\n     *                          `max` comments are returned. It does guarantee that the number of\n     *                          comments returned won't exceed `max`.",
                            "defaultValue": "100"
                        },
                        {
                            "paramType": "query",
                            "name": "topic",
                            "type": "string",
                            "required": false,
                            "description": "Only comments for given topic are returned.\n     *                          Examples: `reviews/1234`, `changes/1234` or `jobs/job001234`."
                        },
                        {
                            "paramType": "query",
                            "name": "fields",
                            "type": "string",
                            "required": false,
                            "description": "An optional comma-separated list (or array) of fields to show for each comment.\n     *                          Omitting this parameter or passing an empty value shows all fields."
                        }
                    ],
                    "notes": "List comments."
                },
                {
                    "method": "POST",
                    "summary": "Add A Comment",
                    "nickname": "addComment",
                    "parameters": [
                        {
                            "paramType": "form",
                            "name": "topic",
                            "type": "string",
                            "required": true,
                            "description": "Topic to comment on.\n     *                          Examples: `reviews/1234`, `changes/1234` or `jobs/job001234`."
                        },
                        {
                            "paramType": "form",
                            "name": "body",
                            "type": "string",
                            "required": true,
                            "description": "Content of the comment."
                        },
                        {
                            "paramType": "form",
                            "name": "taskState",
                            "type": "string",
                            "required": false,
                            "description": "Optional task state of the comment. Valid values when adding a comment are `comment`\n     *                          and `open`. This creates a plain comment or opens a task, respectively.",
                            "defaultValue": "comment"
                        },
                        {
                            "paramType": "form",
                            "name": "flags[]",
                            "type": "array",
                            "required": false,
                            "description": "Optional flags on the comment. Typically set to `closed` to archive a comment.",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "paramType": "form",
                            "name": "context[file]",
                            "type": "string",
                            "required": false,
                            "description": "File to comment on. Valid only for `changes` and `reviews` topics.\n     *                          Example: `//depot/main/README.txt`."
                        },
                        {
                            "paramType": "form",
                            "name": "context[leftLine]",
                            "type": "integer",
                            "required": false,
                            "description": "Left-side diff line to attach the inline comment to.  Valid only for `changes` and\n     *                          `reviews` topics. If this is specified, `context[file]` must also be specified."
                        },
                        {
                            "paramType": "form",
                            "name": "context[rightLine]",
                            "type": "integer",
                            "required": false,
                            "description": "Right-side diff line to attach the inline comment to.  Valid only for `changes` and\n     *                          `reviews` topics. If this is specified, `context[file]` must also be specified."
                        },
                        {
                            "paramType": "form",
                            "name": "context[content]",
                            "type": "array",
                            "required": false,
                            "description": "Optionally provide content of the specified line and its four preceding lines. This\n     *                          is used to specify a short excerpt of context in case the lines being commented\n     *                          on change during the review.\n     *\n     *                          When not provided, Swarm makes an effort to build the content on its own - as this\n     *                          involves file operations, it could become slow.",
                            "items": {
                                "type": "string"
                            }
                        },
                        {
                            "paramType": "form",
                            "name": "context[version]",
                            "type": "integer",
                            "required": false,
                            "description": "With a `reviews` topic, this field specifies which version to attach the comment to."
                        }
                    ],
                    "notes": "Add a comment to a topic (such as a review or a job)"
                }
            ]
        },
        {
            "path": "comments/{id}",
            "operations": [
                {
                    "method": "PATCH",
                    "summary": "Edit A Comment",
                    "nickname": "editComment",
                    "parameters": [
                        {
                            "paramType": "path",
                            "name": "id",
                            "type": "integer",
                            "required": true,
                            "description": "ID of the comment to be edited"
                        },
                        {
                            "paramType": "form",
                            "name": "topic",
                            "type": "string",
                            "required": false,
                            "description": "Topic to comment on.\n     *                          Examples: `reviews/1234`, `changes/1234` or `jobs/job001234`."
                        },
                        {
                            "paramType": "form",
                            "name": "body",
                            "type": "string",
                            "required": true,
                            "description": "Content of the comment."
                        },
                        {
                            "paramType": "form",
                            "name": "taskState",
                            "type": "string",
                            "required": false,
                            "description": "Optional task state of the comment. Note that certain transitions (such as moving from\n     *                          `open` to `verified`) are not possible without an intermediate step (`addressed`, in\n     *                          this case).\n     *                          Examples: `comment` (not a task), `open`, `addressed`, `verified`."
                        },
                        {
                            "paramType": "form",
                            "name": "flags[]",
                            "type": "array",
                            "required": false,
                            "description": "Optional flags on the comment. Typically set to `closed` to archive a comment.",
                            "items": {
                                "type": "string"
                            }
                        }
                    ],
                    "notes": "Edit a comment"
                }
            ]
        }
    ]
}